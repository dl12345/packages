#!/bin/sh /etc/rc.common
# Copyright (C) 2007-2011 OpenWrt.org

USE_PROCD=1
START=99

SOFTFLOWD=/usr/sbin/softflowd
SOFTFLOWCTL=/usr/sbin/softflowctl
RUNDIR=/var/run

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local _val
	config_get_bool _val "$section" "$option" '0'
	[ "$_val" -gt 0 ] && append args "$3"
}

append_string() {
	local section="$1"
	local option="$2"
	local value="$3"
	local _val
	config_get _val "$section" "$option"
	[ -n "$_val" ] && append args "$3 $_val"
}

start_instance() {
	local section="$1"
	local interface=""

	config_get_bool enabled "$section" 'enabled' '0'
	[ "$enabled" -gt 0 ] || return 1

	config_get interface "$section" 'interface'

	args=""
	append_string "$section" 'interface' '-i'
	append_bool   "$section" 'track_ipv6' '-6'
	append_string "$section" 'export_version' '-v'
	append_string "$section" 'host_port' '-n'
	append_string "$section" 'pcap_file' '-r'
	append_string "$section" 'timeout' '-t'
	append_string "$section" 'max_flows' '-m'
	append_string "$section" 'hoplimit' '-L'
	append_string "$section" 'tracking_level' '-T'
	append_string "$section" 'sampling_rate' '-s'

	procd_open_instance
	procd_set_param command $SOFTFLOWD -d $args -c "$RUNDIR/softflowd-$interface.ctl"
	procd_set_param respawn
	procd_close_instance
}

start_service() {
	config_load 'softflowd'
	config_foreach start_instance 'softflowd'
}

stop_instance() {
	local section="$1"
	local interface=""
	local control_socket=""

	config_get interface "$section" 'interface'
	control_socket="$RUNDIR/softflowd-$interface.ctl"

	[ -S $control_socket ] && {
		$SOFTFLOWCTL -c $control_socket expire-all
		$SOFTFLOWCTL -c $control_socket shutdown
		rm -f $control_socket
	}
}

stop_service() {
	config_load 'softflowd'
	config_foreach stop_instance 'softflowd'
}

restart() {
	stop_service
	start_service
}
